---
import ContactUsFormXT24 from '@components/ContactUsFormXT24'
// import { LinkedInIcon } from '@components/Icons'
import AssetImage from '@components/team/AssetImage.astro'
import Layout from '@layouts/Layout.astro'
import speakers from '../data/xt25/speakers.json'
import XT25Agenda from '@components/XT25Agenda.astro'

const { contactSubject } = Astro.props
let subject = 'XT25 RFI'
if (Astro.url.pathname.includes('xt25-gs')) {
  subject = 'XT25-GS RFI'
}
---

<Layout
  title='XT25 Fintech Conference'
  ogImage='/images/XT25/XT25_SaveTheDate.jpeg'
  ogTitle='XT25 Fintech Conference'
  ogDescription='Join fintech engineering leaders for a day of tech talks on GenAI, Platform Engineering, Banking, RegTech, System Architecture and more.'
>
  <!-- Header Image Section -->
  <div
    class='relative w-full'
    style='background-position: center;'
    aria-label='XT25 Conference Banner'
    role='img'
  >
    <!-- Image with natural height preserved -->
    <img
      src='/images/XT25/XT25 Banner2.png'
      alt='XT25 Conference Banner'
      class='w-full h-auto max-w-full'
    />
    <h1 class='sr-only'>XT25 Fintech Conference</h1>
  </div>

  <!-- Main content -->
  <div class='container max-w-6xl mx-auto text-black py-10'>
    <div class='flex flex-col lg:flex-row gap-8 px-4 sm:px-8'>
      <!-- Left column with text content -->
      <div class='lg:w-7/12 flex flex-col justify-center'>
        <h2 class='text-black font-bold text-3xl sm:text-3xl mb-4'>
          XT25: THE FUTURE OF FINTECH
        </h2>

        <p class='text-gray-800 mb-6'>
          After the huge success of XT24, XT25 returns to London for another
          high-energy, one-day event celebrating the financial technology
          ecosystem. Join leaders from tech companies, financial institutions,
          investors, and disruptors for a packed day of keynotes, panel
          discussions, stage talks, interactive panels, and relaxed networking
          as you dive into the latest trends, innovations, and ideas reshaping
          the financial world.
        </p>

        <a
          href='#register'
          class='bg-juxt hover:bg-juxt/90 text-white font-bold py-3 px-6 rounded-md inline-block text-center uppercase w-2/3 text-left text-2xl'
        >
          Invite-Only - Enquire Now
        </a>
      </div>

      <!-- Right column with image -->
      <div class='lg:w-5/12 flex items-center justify-center'>
        <img
          src='/images/XT25/XT25 Intro.jpg'
          alt='Speaker at XT25 Conference'
          class='rounded-lg shadow-lg max-w-full h-auto'
        />
      </div>
    </div>

    <!-- Horizontal divider -->
    <hr class='border-t border-gray-300 w-full my-10' />

    <!-- Speakers section -->
    <div
      id='speakers'
      class='container max-w-6xl mx-auto flex flex-col px-5 sm:px-10 pt-5 sm:pt-10 gap-6'
    >
      <h2 class='text-black font-bold text-4xl mb-8'>Speakers</h2>
      <div
        class='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-x-6 gap-y-12 w-full'
      >
        {
          speakers.map(({ name, role, company, image, linkedin }) => (
            <a
              href={linkedin && `https://www.linkedin.com/in/${linkedin}`}
              target='_blank'
              class={`speaker-card flex flex-col items-center text-center ${
                linkedin ? 'cursor-pointer' : 'cursor-default'
              }`}
            >
              <div class='relative mb-4'>
                <div class='w-56 h-56 border-4 border-green-500 rounded-full overflow-hidden inline-flex'>
                  <img
                    src={image}
                    alt={`Headshot of ${name}`}
                    class='w-full h-full object-cover'
                    style='aspect-ratio: 1/1;'
                  />
                </div>
              </div>
              <h3
                class='font-bold text-xl text-juxt mb-1'
                style='color: #000000;'
              >
                {name}
              </h3>
              {Array.isArray(role) ? (
                role.map((line) => (
                  <p class='text-sm text-gray-800 mb-0'>{line}</p>
                ))
              ) : (
                <p class='text-sm text-gray-800'>{role}</p>
              )}
              {company && (
                <p class='text-sm font-medium text-gray-800'>{company}</p>
              )}
            </a>
          ))
        }
      </div>
    </div>

    <!-- Horizontal divider -->
    <hr class='border-t border-gray-300 w-full my-10' />

    <!-- Agenda -->
    <div
      id='agenda'
      class='container max-w-6xl mx-auto flex flex-col px-5 sm:px-10 pt-10 sm:pt-20 items-center sm:items-start'
    >
      <h2 class='text-black font-bold text-4xl mb-8'>Agenda</h2>
      <div class='w-full bg-gray-100 rounded-lg overflow-hidden p-10 sm:p-14'>
        <XT25Agenda />
      </div>
      <div class='w-full flex justify-end'>
        <p class='text-sm pb-5 text-black pt-4'>
          *Agenda and speakers are subject to change
        </p>
      </div>
    </div>

    <!-- Horizontal divider -->
    <hr class='border-t border-gray-300 w-full my-10' />

    <!-- Form -->
    <div
      id='register'
      class='flex flex-col gap-3 bg-juxt p-6 pb-4 text-black rounded-xl shadow-lg max-w-2xl mx-auto overflow-hidden mt-8'
      style='border-radius: 0.75rem; isolation: isolate;'
    >
      <span
        class='text-black font-bold uppercase self-center text-center text-2xl'
      >
        This Event is Invite-Only and Free for Attendees
      </span>
      <ContactUsFormXT24 client:only subject={contactSubject || subject} />
    </div>
  </div>

  <style>
    @keyframes slide {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(
          calc(-100vw / 4 * 22)
        ); /* Width of one image * number of real images (22) */
      }
    }

    .animate-slide {
      animation: slide 100s linear infinite;
    }

    .sr-only {
      /* Hidden from screen readers */
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border-width: 0;
    }

    .speaker-card {
      transition: transform 0.3s ease;
    }

    .speaker-card:hover {
      transform: translateY(-5px);
    }
  </style>

  <script>
    // Image paths
    const imagePaths = Array.from(
      { length: 22 }, // Total Images
      (_, i) => `/images/XT25/JUXT XT24 Conference ${i + 1}.jpg`
    )

    // Function to create image element
    function createImageElement(src, alt) {
      const div = document.createElement('div')
      div.className = 'flex-shrink-0'

      // Responsive width based on screen size
      div.style.width = 'calc(100vw)' // Full width on mobile

      // Adjust width based on screen size
      if (window.innerWidth >= 640) {
        div.style.width = 'calc(100vw / 2)' // 2 images on small screens
      }
      if (window.innerWidth >= 768) {
        div.style.width = 'calc(100vw / 3)' // 3 images on medium screens
      }
      if (window.innerWidth >= 1024) {
        div.style.width = 'calc(100vw / 4)' // 4 images on large screens
      }
      if (window.innerWidth >= 2048) {
        div.style.width = 'calc(100vw / 5)' // 5 images on 4k screens
      }

      const img = document.createElement('img')
      img.src = src
      img.alt = alt
      img.className = 'w-full h-64 object-cover'

      div.appendChild(img)
      return div
    }

    // Initialise seamless looping carousel
    function initialiseCarousel() {
      const carousel = document.getElementById('imageCarousel')
      carousel.innerHTML = ''

      // Add the initial main set of images
      imagePaths.forEach((path, index) => {
        carousel.appendChild(
          createImageElement(path, `JUXT XT24 Conference Image ${index + 1}`)
        )
      })

      // Add the same set again for seamless looping
      imagePaths.forEach((path, index) => {
        carousel.appendChild(
          createImageElement(path, `JUXT XT24 Conference Image ${index + 1}`)
        )
      })
    }

    // Initialise the carousel
    initialiseCarousel()

    // Update animation based on screen size
    function updateAnimation() {
      const style = document.createElement('style')

      // Adaptively set the number of images per view based on screen size
      let imagesPerView = 1 // Default for mobile
      if (window.innerWidth >= 640) imagesPerView = 2 // sm
      if (window.innerWidth >= 768) imagesPerView = 3 // md
      if (window.innerWidth >= 1024) imagesPerView = 4 // lg
      if (window.innerWidth >= 2048) imagesPerView = 5 // 4k

      // Create updated keyframes
      style.textContent = `
            @keyframes slide {
              0% {
                transform: translateX(0);
              }
              100% {
                transform: translateX(calc(-100vw / ${imagesPerView} * 22));
              }
            }
            
            .animate-slide {
              animation: slide 120s linear infinite;
            }
          `

      // Add ID to new style and append to document
      style.id = 'carousel-style'
      document.head.appendChild(style)
    }

    // Initial update
    updateAnimation()

    // Update on window resize
    window.addEventListener('resize', () => {
      initialiseCarousel() // Recreate carousel with new widths
      updateAnimation() // Update animation parameters
    })
  </script>
</Layout>
